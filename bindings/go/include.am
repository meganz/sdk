# Output directory for Go bindings
GOBINDIR = bindings/go/megasdk

# SWIG command for generating Go bindings
SWIG_GO = swig

# Go package name
GOPACKAGE = mega

# SWIG flags for Go bindings
SWIG_GO_FLAGS = -go -cgo -intgosize 64 -c++

# SWIG generated Go source file
GO_SOURCE = $(GOBINDIR)/megaapi_wrap.cpp

# Clean Go bindings files
CLEANFILES += $(GO_SOURCE)
CLEANFILES += $(GOBINDIR)/megaapi_wrap.h
CLEANFILES += $(GOBINDIR)/mega.go
CLEANFILES += $(LIBRARY_PATH)

# Sources for SWIG Go wrapper
nodist_bindings_go_lib_mega_la_SOURCES = $(GO_SOURCE)
bindings_go_lib_mega_la_SOURCES = $(top_srcdir)/bindings/megaapi.i

bindings_go_lib_mega_la_CPPFLAGS = -I$(top_srcdir)/include

ABS_TOP_SRCDIR := $(realpath $(top_srcdir))
$(GO_SOURCE): $(top_srcdir)/bindings/megaapi.i
	$(SWIG_GO) $(SWIG_GO_FLAGS) -o $@ -outdir $(GOBINDIR) -package $(GOPACKAGE) -I$(top_srcdir)/include $<
	@sed -i 's,#include "megaapi.h",#include "../../../include/megaapi.h",' $(top_srcdir)/bindings/go/megasdk/megaapi_wrap.cpp
	@echo 'package mega' > $(top_srcdir)/bindings/go/megasdk/package.go
	@echo '' >> $(top_srcdir)/bindings/go/megasdk/package.go
	@echo '// #cgo LDFLAGS: -L$(ABS_TOP_SRCDIR)/src/.libs -lmega' >> $(top_srcdir)/bindings/go/megasdk/package.go
	@echo 'import "C"' >> $(top_srcdir)/bindings/go/megasdk/package.go

.PHONY: go-bindings
go-bindings: $(GO_SOURCE) $(LIBRARY_PATH)

# Ensure that the Go bindings and the shared library are built when requested
all-local: go-bindings
